# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-26 12:24
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import speeches.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('url', models.URLField(help_text='A URL', max_length=350, verbose_name='url')),
                ('note', models.CharField(blank=True, help_text="A note, e.g. 'Wikipedia page'", max_length=256, null=True, verbose_name='note')),
                ('name', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mandate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('name', models.TextField(help_text='A primary name, e.g. a legally recognized name', verbose_name='name')),
                ('name_parser', models.CharField(blank=True, help_text='Name for parser.', max_length=500, null=True)),
                ('acronym', models.CharField(blank=True, help_text='Organization acronym', max_length=128, null=True, verbose_name='acronym')),
                ('gov_id', models.TextField(blank=True, help_text='Gov website ID', null=True, verbose_name='Gov website ID')),
                ('classification', models.CharField(blank=True, help_text='An organization category, e.g. committee', max_length=128, null=True, verbose_name='classification')),
                ('dissolution_date', speeches.models.PopoloDateTimeField(blank=True, help_text='A date of dissolution', null=True)),
                ('founding_date', speeches.models.PopoloDateTimeField(blank=True, help_text='A date of founding', null=True)),
                ('description', models.TextField(blank=True, help_text='Organization description', null=True)),
                ('is_coalition', models.IntegerField(blank=True, help_text='1 if coalition, -1 if not, 0 if it does not apply', null=True)),
                ('parent', models.ForeignKey(blank=True, help_text='The organization that contains this organization', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='speeches.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('name', models.CharField(help_text="A person's preferred full name", max_length=128, verbose_name='name')),
                ('name_parser', models.CharField(blank=True, help_text='Name for parser.', max_length=500, null=True)),
                ('classification', models.CharField(blank=True, help_text='Classification for sorting purposes.', max_length=128, null=True, verbose_name='classification')),
                ('family_name', models.CharField(blank=True, help_text='One or more family names', max_length=128, null=True, verbose_name='family name')),
                ('given_name', models.CharField(blank=True, help_text='One or more primary given names', max_length=128, null=True, verbose_name='given name')),
                ('additional_name', models.CharField(blank=True, help_text='One or more secondary given names', max_length=128, null=True, verbose_name='additional name')),
                ('honorific_prefix', models.CharField(blank=True, help_text="One or more honorifics preceding a person's name", max_length=128, null=True, verbose_name='honorific prefix')),
                ('honorific_suffix', models.CharField(blank=True, help_text="One or more honorifics following a person's name", max_length=128, null=True, verbose_name='honorific suffix')),
                ('patronymic_name', models.CharField(blank=True, help_text='One or more patronymic names', max_length=128, null=True, verbose_name='patronymic name')),
                ('sort_name', models.CharField(blank=True, help_text='A name to use in an lexicographically ordered list', max_length=128, null=True, verbose_name='sort name')),
                ('previous_occupation', models.TextField(blank=True, help_text="The person's previous occupation", null=True, verbose_name='previous occupation')),
                ('education', models.TextField(blank=True, help_text="The person's education", null=True, verbose_name='education')),
                ('education_level', models.TextField(blank=True, help_text="The person's education level", null=True, verbose_name='education level')),
                ('mandates', models.IntegerField(blank=True, help_text="Person's number of mandates, including the current one", null=True, verbose_name='mandates')),
                ('email', models.EmailField(blank=True, help_text='A preferred email address', max_length=254, null=True, verbose_name='email')),
                ('gender', models.CharField(blank=True, help_text='A gender', max_length=128, null=True, verbose_name='gender')),
                ('birth_date', speeches.models.PopoloDateTimeField(blank=True, help_text='A date of birth', null=True, verbose_name='date of birth')),
                ('death_date', speeches.models.PopoloDateTimeField(blank=True, help_text='A date of death', null=True, verbose_name='date of death')),
                ('summary', models.CharField(blank=True, help_text="A one-line account of a person's life", max_length=512, null=True, verbose_name='summary')),
                ('biography', models.TextField(blank=True, help_text="An extended account of a person's life", null=True, verbose_name='biography')),
                ('image', models.URLField(blank=True, help_text='A URL of a head shot', null=True, verbose_name='image')),
                ('gov_id', models.CharField(blank=True, help_text='gov website id for the scraper', max_length=255, null=True, verbose_name='gov_id')),
                ('gov_picture_url', models.URLField(blank=True, help_text='URL to gov website pic', null=True, verbose_name='gov image url')),
                ('voters', models.IntegerField(blank=True, help_text='number of votes cast for this person in their district', null=True, verbose_name='voters')),
                ('active', models.BooleanField(default=True, help_text='a generic active or not toggle', verbose_name='active')),
                ('gov_url', models.ForeignKey(blank=True, help_text='URL to gov website profile', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gov_link', to='speeches.Link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('name', models.CharField(blank=True, help_text='Session name', max_length=255, null=True)),
                ('gov_id', models.CharField(blank=True, help_text='Gov website ID.', max_length=255, null=True)),
                ('start_time', speeches.models.PopoloDateTimeField(blank=True, help_text='Start time', null=True)),
                ('end_time', speeches.models.PopoloDateTimeField(blank=True, help_text='End time', null=True)),
                ('classification', models.CharField(blank=True, help_text='Session classification', max_length=128, null=True)),
                ('in_review', models.BooleanField(default=False, help_text='Is session in review?')),
                ('mandate', models.ForeignKey(blank=True, help_text='The mandate of this milestone.', null=True, on_delete=django.db.models.deletion.CASCADE, to='speeches.Mandate')),
                ('organization', models.ForeignKey(blank=True, help_text='The organization in session', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session', to='speeches.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Speech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('valid_from', models.DateTimeField(blank=True, default=None, help_text='row valid from', null=True)),
                ('valid_to', models.DateTimeField(blank=True, default=None, help_text='row valid to', null=True)),
                ('content', models.TextField(help_text='Words spoken')),
                ('order', models.IntegerField(blank=True, help_text='Order of speech', null=True)),
                ('start_time', speeches.models.PopoloDateTimeField(blank=True, help_text='Start time', null=True)),
                ('end_time', speeches.models.PopoloDateTimeField(blank=True, help_text='End time', null=True)),
                ('party', models.ForeignKey(blank=True, default=2, help_text='The party of the person making the speech', null=True, on_delete=django.db.models.deletion.CASCADE, to='speeches.Organization')),
                ('session', models.ForeignKey(blank=True, help_text='Speech session', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speeches', to='speeches.Session')),
                ('speaker', models.ForeignKey(help_text='Person making the speech', on_delete=django.db.models.deletion.CASCADE, to='speeches.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='link',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='The organization of this link.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='links', to='speeches.Organization'),
        ),
        migrations.AddField(
            model_name='link',
            name='person',
            field=models.ForeignKey(blank=True, help_text='The person of this link.', null=True, on_delete=django.db.models.deletion.CASCADE, to='speeches.Person'),
        ),
        migrations.AddField(
            model_name='link',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='speeches.Session'),
        ),
    ]
